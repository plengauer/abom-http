name: Publish

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - uses: plengauer/opentelemetry-bash/actions/instrument/job@v5.18.2
        with:
          secrets_to_redact: '${{ toJSON(secrets) }}'
        env:
          OTEL_EXPORTER_OTLP_ENDPOINT: '${{ secrets.OTEL_EXPORTER_OTLP_ENDPOINT }}'
          OTEL_EXPORTER_OTLP_HEADERS: '${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}'
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install devscripts debhelper
      - run: sed -i "s/__VERSION__/$(cat ../VERSION)/g" DEBIAN/control
      - run: dpkg-deb --root-owner-group -Zgzip --build . ../package.deb
      - uses: actions/upload-artifact@v4
        with:
          name: package.deb
          path: package.deb

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - run: sudo apt-get update && sudo apt-get install ./package.deb
      - uses: actions/checkout@v4
      - run: bash -e -c 'cd tests && bash test_all.sh'

  publish:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: plengauer/opentelemetry-bash/actions/instrument/job@v5.18.2
        with:
          secrets_to_redact: '${{ toJSON(secrets) }}'
        env:
          OTEL_EXPORTER_OTLP_ENDPOINT: '${{ secrets.OTEL_EXPORTER_OTLP_ENDPOINT }}'
          OTEL_EXPORTER_OTLP_HEADERS: '${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}'
      - uses: actions/checkout@v4
      - run: echo "version=$(cat VERSION)" >> "$GITHUB_OUTPUT"
        id: version
      - uses: actions/download-artifact@v4
        with:
          name: package.deb
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
      - uses: actions/upload-release-asset@v1
        id: upload-release-asset
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./package.deb
          asset_name: package_${{ steps.version.outputs.version }}.deb
          asset_content_type: application/octet-stream
